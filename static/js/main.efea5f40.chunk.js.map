{"version":3,"sources":["components/Recipe.jsx","App.js","reportWebVitals.js","index.js"],"names":["ExpandMore","styled","props","expand","other","IconButton","theme","transform","marginLeft","transition","transitions","create","duration","shortest","Recipe","title","calories","image","ingredients","React","useState","expanded","setExpanded","Card","sx","maxWidth","CardHeader","subheader","CardMedia","component","height","alt","CardActions","disableSpacing","onClick","Collapse","in","timeout","unmountOnExit","CardContent","Typography","paragraph","map","ingre","text","App","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","console","log","getRecipe","a","axios","get","response","data","hits","Paper","onSubmit","e","preventDefault","p","display","alignItems","width","margin","InputBase","type","value","onChange","target","ml","flex","placeholder","inputProps","Grid","container","recipe","item","xs","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efea5f40.chunk.js","sourcesContent":["import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Card';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardActions from '@mui/material/CardActions';\nimport Collapse from '@mui/material/Collapse';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n\nconst ExpandMore = styled((props) => {\n\tconst { expand, ...other } = props;\n\treturn <IconButton {...other} />;\n})(({ theme, expand }) => ({\n\ttransform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n\tmarginLeft: 'auto',\n\ttransition: theme.transitions.create('transform', {\n\t\tduration: theme.transitions.duration.shortest,\n\t}),\n}));\n\n\n\nconst Recipe = ({ title, calories, image, ingredients }) => {\n\n\tconst [expanded, setExpanded] = React.useState(false);\n\n\tconst handleExpandClick = () => {\n\t\tsetExpanded(!expanded);\n\t};\n\treturn (\n\n\n\t\t<div>\n\t\t\t<Card sx={{ maxWidth: 345 }}>\n\t\t\t\t<CardHeader\n\t\t\t\t\ttitle={title}\n\t\t\t\t\tsubheader={calories}\n\t\t\t\t/>\n\t\t\t\t<CardMedia\n\t\t\t\t\tcomponent=\"img\"\n\t\t\t\t\theight=\"194\"\n\t\t\t\t\timage={image}\n\t\t\t\t\talt=\"Paella dish\"\n\t\t\t\t/>\n\n\t\t\t\t<CardActions disableSpacing>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tIngredients\n\t\t\t\t\t</div>\n\t\t\t\t\t<ExpandMore\n\t\t\t\t\t\texpand={expanded}\n\t\t\t\t\t\tonClick={handleExpandClick}\n\t\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\t\taria-label=\"show more\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ExpandMoreIcon />\n\t\t\t\t\t</ExpandMore>\n\t\t\t\t</CardActions>\n\t\t\t\t<Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography paragraph>Method:</Typography>\n\t\t\t\t\t\t<Typography paragraph>\n\t\t\t\t\t\t\t{ingredients.map((ingre) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<li>{ingre.text}</li>\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Typography>\n\n\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Collapse>\n\t\t\t</Card>\n\n\n\t\t\t{/* \n\t\t\t<p>{title}</p>\n\t\t\t<p>{calories}</p>\n\t\t\t<img src={image} alt=\"imagee\" />\n\t\t\t<ol>\n\t\t\t\t{ingredients.map((ingre) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li>{ingre.text}</li>\n\t\t\t\t\t)\n\n\t\t\t\t})}\n\t\t\t</ol> */}\n\n\t\t</div>\n\t)\n}\n\nexport default Recipe\n","import React,{useEffect,useState} from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Recipe from './components/Recipe';\nimport Paper from '@mui/material/Paper';\nimport InputBase from '@mui/material/InputBase';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport Grid from '@mui/material/Grid';\n\nfunction App() {\n\n  // const [count,setCount] = useState(0);\n  const APP_ID = \"701eb24b\";\n  const APP_KEY = \"5e76d12363b4e8f3726c2a0f5e8fc58e\";\n\n  const [recipes,setRecipes] = useState([]);\n  const [search,setSearch] = useState(\"\");\n  const [query,setQuery] = useState(\"chicken\");\n  \n\nuseEffect(() =>{\n\n  console.log(\"effect runs\")\n  getRecipe();\n\n},[query]);\n\nconst getRecipe = async() => {\n    const response = await axios.get(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    console.log(response.data.hits);\n    setRecipes(response.data.hits);\n};\n\nconst updateSearch = (e) =>{\n  setSearch(e.target.value);\n    console.log(e.target.value);\n} \nconst updateQuery =(e) => {\n  e.preventDefault();\n  setQuery(search);\n}\n\n  return (\n    <div>\n      <h1>Recipe Book</h1>\n\n\n      <Paper\n      onSubmit={updateQuery}\n      component=\"form\"\n      sx={{ p: '2px 4px', display: 'flex', alignItems: 'center', width: 400 ,margin:'10px auto'}}>\n      \n      <InputBase\n      type=\"text\" value={search} onChange={updateSearch}\n        sx={{ ml: 1, flex: 1 }}\n        placeholder=\"Search Recipe\"\n        inputProps={{ 'aria-label': 'search recipe' }}\n      />\n      <IconButton type=\"submit\" sx={{ p: '10px' }} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n      \n    </Paper>\n\n\n      {/* <form onSubmit={updateQuery}>\n      <input type=\"text\" value={search} onChange={updateSearch}/>\n      <button type=\"submit\">Search</button>\n      </form> */}\n\n\n    {/* {count}\n      <button onClick= {() => {setCount(count+1)}} >COUNT</button>\n       */}\n\n       <Grid container>\n       {recipes.map((recipe)=>{\n         return(\n           <>\n           <Grid item xs={2} />\n         <Recipe key={recipe.recipe.label} title={recipe.recipe.label} calories = {recipe.recipe.calories} image = {recipe.recipe.image} ingredients={recipe.recipe.ingredients} />\n         </>\n         )\n       } )}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}